variable "project_prefix" {
  type        = string
  description = "prefix string put in front of string"
  default     = "f5xc"
}

variable "project_suffix" {
  type        = string
  description = "prefix string put at the end of string"
  default     = "01"
}

variable "azure_client_id" {
  type    = string
}

variable "azure_client_secret" {
  type    = string
}

variable "azure_tenant_id" {
  type    = string
}

variable "azure_subscription_id" {
  type    = string
}

variable "azure_region" {
  type    = string
  default = "eastus"
}

variable "azure_zones" {
  type    = list(number)
  default = [1]
}

variable "owner_tag" {
  type    = string
  default = "c.klewar@f5.com"
}

variable "ssh_public_key_file" {
  type    = string
}

provider "azurerm" {
  features {}
  client_id       = var.azure_client_id
  client_secret   = var.azure_client_secret
  tenant_id       = var.azure_tenant_id
  subscription_id = var.azure_subscription_id
  alias           = "eastus"
}

module "azure_resource_group" {
  source                    = "./modules/azure/resource_group"
  azure_region              = var.azure_region
  azure_resource_group_name = format("%s-azure-vm-rg-%s", var.project_prefix, var.project_suffix)
  providers                 = {
    azurerm = azurerm.eastus
  }
  custom_tags = {
    "Owner" = var.owner_tag
  }
}

module "azure_virtual_network" {
  source                         = "./modules/azure/virtual_network"
  azure_region                   = var.azure_region
  azure_vnet_name                = format("%s-azure-vnet-%s", var.project_prefix, var.project_suffix)
  azure_vnet_primary_ipv4        = "172.16.24.0/21"
  azure_vnet_resource_group_name = module.azure_resource_group.resource_group["name"]
  providers                      = {
    azurerm = azurerm.eastus
  }
  custom_tags = {
    "Owner" = var.owner_tag
  }
}

module "azure_subnet" {
  source                           = "./modules/azure/subnet"
  azure_subnet_address_prefixes    = ["172.16.24.0/24"]
  azure_subnet_name                = format("%s-azure-subnet-%s", var.project_prefix, var.project_suffix)
  azure_subnet_resource_group_name = module.azure_resource_group.resource_group["name"]
  azure_vnet_name                  = module.azure_virtual_network.vnet["name"]
  providers                        = {
    azurerm = azurerm.eastus
  }
}

module "azure_virtual_machine" {
  source                       = "./modules/azure/linux_virtual_machine"
  azure_zone                   = element(var.azure_zones, 0)
  azure_zones                  = var.azure_zones
  azure_region                 = var.azure_region
  azure_vnet_subnet_id         = module.azure_subnet.subnet["id"]
  azure_resource_group_name    = module.azure_resource_group.resource_group["name"]
  azure_virtual_machine_name   = format("%s-azure-vm-%s", var.project_prefix, var.project_suffix)
  public_ssh_key               = file(var.ssh_public_key_file)
  providers                    = {
    azurerm = azurerm.eastus
  }
  custom_tags = {
    "Owner" = var.owner_tag
  }
  azure_network_interfaces = [
    {
      name             = format("%s-azure-vm-interface-%s", var.project_prefix, var.project_suffix)
      tags             = { "tagA" : "tagValueA" }
      ip_configuration = {
        subnet_id                     = module.azure_subnet.subnet["id"]
        create_public_ip_address      = true
        private_ip_address_allocation = "Dynamic"
      }
    }
  ]
}

module "azure_security_group" {
  source                       = "./modules/azure/security_group"
  azure_region                 = var.azure_region
  azure_resource_group_name    = module.azure_resource_group.resource_group["name"]
  azure_security_group_name    = format("%s-spoke-a-sg-%s", var.project_prefix, var.project_suffix)
  azurerm_network_interface_id = element(module.azure_virtual_machine.virtual_machine ["network_interface_ids"], 0)
  azure_linux_security_rules   = [
    {
      name                       = "SSH"
      priority                   = 1001
      direction                  = "Inbound"
      access                     = "Allow"
      protocol                   = "Tcp"
      source_port_range          = "*"
      destination_port_range     = "22"
      source_address_prefix      = "*"
      destination_address_prefix = "*"
    },
    {
      name                       = "OUTBOUND_ALL"
      priority                   = 1002
      direction                  = "Outbound"
      access                     = "Allow"
      protocol                   = "*"
      source_port_range          = "*"
      destination_port_range     = "*"
      source_address_prefix      = "*"
      destination_address_prefix = "*"
    }
  ]
  custom_tags = {
    "Owner" = var.owner_tag
  }
  providers = {
    azurerm = azurerm.eastus
  }
}

output "azure_virtual_machine" {
  value = module.azure_virtual_machine.virtual_machine
}